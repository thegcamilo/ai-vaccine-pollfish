{"version":3,"sources":["assets/AI.png","assets/human.png","assets/human-AI.png","assets/pos_.png","assets/neg_.png","assets/con_.png","Data.js","Consent.js","ConcernContact.js","Intro.js","WillQuestions.js","Present.js","AttCheck.js","Responsibility.js","Future.js","Medical.js","Demographics.js","config.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getRandomItem","items","Math","floor","random","length","treatDiseases","treatAgents","treatTimes","introQuestions","id","question","answers","willQuestions","beforeAfter","before","after","future","attentionCheck","text","consequences","agentText","agentQuestions","initial","pos","neg","con","conclusion","MMMS","demographics","questions","shuffle","Consent","className","style","this","props","Preview","Button","variant","onClick","skipStage","React","Component","ConcernContact","require","state","contactQuestions","concernQuestions","map","qIdx","key","answer","aIdx","type","name","value","saveResponses","min","max","responsesIncludeKey","background","step","onChange","event","target","textAlign","width","float","Intro","initialInfo","responses","init","Date","changeInternalState","bind","checkTime","delta_time","console","log","alert","saveTime","Object","keys","saveDictToState","setState","response","tmpResponses","content","WillQuestions","tmpShuffle","concat","questionCompletion","postQuestionID","Present","showNews","image","agent","AINews","humanNews","humanAINews","src","alt","onMouseEnter","onMouseLeave","AttCheck","margin","Id","marginLeft","Responsibility","entities","currEntity","posNeg","disease","entityQuestions","multiplier","time","responsesTmp","checkTimeFuture","entity","Future","consequence","stages","currStageId","hideButton","PosImg","NegImg","ConImg","showMainButton","currStage","condition","skipAppStage","Medical","Demographics","demographicQuestions","setQuestions","i","options","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","params","parse","location","search","prolificId","RESPONDENT_ID","redirectToSurveyCompletion","saveToFirebase","firebase","initializeApp","dict","nameTime","allResponses","times","keyTime","database","ref","set","catch","error","then","window","open","stage","Boolean","hostname","match","routing","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8JAAAA,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,iNCEpC,SAASC,EAAcC,GAAQ,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAASH,EAAMI,SAE3E,IAAMC,EAAgB,CAAC,YACjBC,EAAc,CAAC,QAAS,WAAY,MACpCC,EAAa,CAAC,SAEdC,EACA,CACL,CAACC,GAAI,YAAaC,SAAU,kDAAmDC,QAAS,CAAC,MAAO,KAAM,iBACtG,CAACF,GAAI,gBAAiBC,SAAU,oEAAqEC,QAAS,CAAC,MAAO,KAAM,iBAC5H,CAACF,GAAI,eAAgBC,SAAU,oHAAsHC,QAAS,CAAC,MAAO,KAAM,mBAJvKH,EAMA,CAEL,CAACC,GAAI,gBAAiBC,SAAU,kDAAmDC,QAAS,CAAC,oBAAqB,gBAClH,CAACF,GAAI,aAAcC,SAAU,gFAAiFC,QAAS,CAAC,oBAAqB,gBAC7I,CAACF,GAAI,aAAcC,SAAU,yHAA0HC,QAAS,CAAC,oBAAqB,gBACtL,CAACF,GAAI,UAAWC,SAAU,gDAAiDC,QAAS,CAAC,uBAAwB,oBAkBxGC,EAAgB,CACzB,CAAC,CAACH,GAAI,eAAgBC,SAAU,8CAA+CC,QAAS,CAAC,qBAAsB,gBAAiB,iBAC/H,CAACF,GAAI,YAAaC,SAAU,6DAA8DC,QAAS,CAAC,qBAAsB,gBAAiB,iBAC3I,CAACF,GAAI,YAAaC,SAAU,iFAAkFC,QAAS,CAAC,qBAAsB,gBAAiB,kBAChK,CAAC,CAACF,GAAI,YAAaC,SAAU,0DAA2DC,QAAS,CAAC,qBAAsB,gBAAiB,mBAKhIE,EAAc,CACvBC,OAAQ,IACRC,MAAO,IACPC,OAAQ,KAICC,EACA,CACL,CAACR,GAAI,SAAUS,KAAM,sBACrB,CAACT,GAAI,QAASS,KAAM,yBACpB,CAACT,GAAI,KAAMS,KAAM,sCACjB,CAACT,GAAI,WAAYS,KAAM,8EAGlBC,EAAe,CACxB,MAAO,MAAO,OAGLC,EAAY,CACrB,MAAU,CACN,CAACX,GAAI,cAAeS,KAAM,2BAG1B,CAACT,GAAI,aAAcS,KAAM,iBACzB,CAACT,GAAI,SAAUS,KAAM,wDAGzB,WAAY,CACR,CAACT,GAAI,cAAeS,KAAM,2BAC1B,CAACT,GAAI,KAAMS,KAAM,wBACjB,CAACT,GAAI,UAAWS,KAAM,gDACtB,CAACT,GAAI,aAAcS,KAAM,iBACzB,CAACT,GAAI,SAAUS,KAAM,uDACrB,CAACT,GAAI,aAAcS,KAAM,6CAE7B,GAAM,CACF,CAACT,GAAI,cAAeS,KAAM,gEAC1B,CAACT,GAAI,KAAMS,KAAM,wBACjB,CAACT,GAAI,UAAWS,KAAM,gDACtB,CAACT,GAAI,aAAcS,KAAM,iBACzB,CAACT,GAAI,SAAUS,KAAM,uDACrB,CAACT,GAAI,aAAcS,KAAM,8CAKpBG,EAAiB,CAQ1B,CAACZ,GAAI,QACJa,QAAS,CAACC,IAAK,wBAAyBC,IAAK,uBAAwBC,IAAK,yBAC1EC,WAAY,CAACH,IAAK,0DACLC,IAAK,yDACLC,IAAK,yDAClBd,QAAS,CAAC,cAAe,WAAY,OAAQ,UAE9C,CAACF,GAAI,QACJa,QAAS,CAACC,IAAK,yBAA0BC,IAAK,yBAA0BC,IAAK,0BAC7EC,WAAY,CAACH,IAAK,wEACLC,IAAK,uEACLC,IAAK,uEAClBd,QAAS,CAAC,mBAAoB,mBAAoB,iBAAkB,eAErE,CAACF,GAAI,SACLa,QAAS,CAACC,IAAK,mBAAoBC,IAAK,mBAAoBC,IAAK,oBACjEC,WAAY,CAACH,IAAK,6DACLC,IAAK,6DACLC,IAAK,8DAClBd,QAAS,CAAC,aAAc,WAAY,OAAQ,WAKnCgB,EACA,CAAC,oBAAqB,6BAA8B,kBADpDA,EAEE,CACP,CAAClB,GAAI,QAASS,KAAM,wFACpB,CAACT,GAAI,QAASS,KAAM,iGACpB,CAACT,GAAI,QAASS,KAAM,gEACpB,CAACT,GAAI,QAASS,KAAM,mGACpB,CAACT,GAAI,QAASS,KAAM,+HACpB,CAACT,GAAI,QAASS,KAAM,gGACpB,CAACT,GAAI,QAASS,KAAM,4DACpB,CAACT,GAAI,QAASS,KAAM,oFACpB,CAACT,GAAI,QAASS,KAAM,uGACpB,CAACT,GAAI,QAASS,KAAM,+DAMfU,EAAe,CACxB,CAACnB,GAAI,OAAQoB,UAAWC,IAAQ,CAC5B,CAACrB,GAAI,WAAYC,SAAU,kFAAmFC,QAAS,CAAC,kBAAmB,iBAAkB,cAC7J,CAACF,GAAI,aAAcC,SAAU,oFAAqFC,QAAS,CAAC,oBAAqB,iBAAkB,gBACnK,CAACF,GAAI,gBAAiBC,SAAU,0EAA2EC,QAAS,CAAC,uBAAwB,iBAAkB,mBAC/J,CAACF,GAAI,iBAAkBC,SAAU,kFAAmFC,QAAS,CAAC,uBAAwB,iBAAkB,mBACxK,CAACF,GAAI,WAAYC,SAAU,qIAAsIC,QAAS,CAAC,kBAAmB,iBAAkB,cAChN,CAACF,GAAI,aAAcC,SAAU,4HAAwHC,QAAS,CAAC,kBAAmB,iBAAkB,iBACpM,CAACF,GAAI,cAAeC,SAAU,4EAA6EC,QAAS,CAAC,kBAAmB,iBAAkB,iBAE9J,CAACF,GAAI,UAAWoB,UAAWC,IAAQ,CAC/B,CAACrB,GAAI,kBAAmBC,SAAU,8GAA+GC,QAAS,CAAC,UAAW,YAAa,aAAc,kBACjM,CAACF,GAAI,OAAQC,SAAU,kEAAmEC,QAAS,CAAC,QAAS,kBAAmB,aAAc,yBAC9I,CAACF,GAAI,sBAAuBC,SAAU,0EAA2EC,QAAS,CAAC,QAAS,kBAAmB,iBAAkB,qBACzK,CAACF,GAAI,mBAAoBC,SAAU,yEAA0EC,QAAS,CAAC,OAAQ,uBAAwB,gBAAiB,oBACxK,CAACF,GAAI,gBAAiBC,SAAU,+HAAgIC,QAAS,CAAC,OAAQ,qBAAsB,qBAAsB,2BAElO,CAACF,GAAI,gBAAiBoB,UAAWC,IAAQ,CACrC,CAACrB,GAAI,YAAaC,SAAU,8CAA+CC,QAAS,CAAC,MAAO,OAC5F,CAACF,GAAI,aAAcC,SAAU,mDAAoDC,QAAS,CAAC,MAAO,OAClG,CAACF,GAAI,YAAaC,SAAU,iCAAkCC,QAAS,CAAC,MAAO,OAC/E,CAACF,GAAI,iBAAkBC,SAAU,2DAA4DC,QAAS,CAAC,QAAS,gBAAiB,mCAAoC,aACrK,CAACF,GAAI,cAAeC,SAAU,8DAA+DC,QAAS,CAAC,cAAe,OAAQ,aAElI,CAACF,GAAI,WAAYoB,UAAWC,IAAQ,CAChC,CAACrB,GAAI,MAAOC,SAAU,oBAAqBC,QAAS,CAAC,SAAU,OAAQ,UACvE,CAACF,GAAI,MAAOC,SAAU,mBAAoBC,QAAS,CAAC,yBAA0B,kBAAmB,kBAAmB,kBAAmB,kBAAmB,2BAC1J,CAACF,GAAI,YAAaC,SAAU,0BAA2BC,QAAS,CAAC,uBAAwB,uBAAwB,QAAS,WAAY,UACtI,CAACF,GAAI,YAAaC,SAAU,qEAAsEC,QAAS,CAAC,kCAAmC,4BAA6B,0BAA2B,mBAAoB,oBAAqB,kBAAmB,sBAAuB,cAC1R,CAACF,GAAI,SAAUC,SAAU,6BAA8BC,QAAS,CAAC,oBAAqB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,oBAAqB,uBACvL,CAACF,GAAI,aAAcC,SAAU,8CAA+CC,QAAS,CAAC,eAAgB,WAAY,YAClH,CAACF,GAAI,YAAaC,SAAU,2CAA4CC,QAAS,CAAC,eAAgB,WAAY,eAElH,CAACF,GAAI,QAASoB,UAAW,8CAA+ClB,QAAS,CAC7E,CAAC,MAAS,WAAY,MAAS,YAC/B,CAAC,MAAS,mBAAoB,MAAS,oBACvC,CAAC,MAAS,QAAS,MAAS,SAC5B,CAAC,MAAS,aAAc,MAAS,cACjC,CAAC,MAAS,aAAc,MAAS,cACjC,CAAC,MAAS,2BAA4B,MAAS,4BAC/C,CAAC,MAAS,gBAAiB,MAAS,iBACpC,CAAC,MAAS,gBAAiB,MAAS,iBACpC,CAAC,MAAS,aAAc,MAAS,cACjC,CAAC,MAAS,aAAc,MAAS,cACjC,CAAC,MAAS,kBAAmB,MAAS,mBACtC,CAAC,MAAS,iBAAkB,MAAS,qB,eCpJ9BoB,E,uKAlCP,OACI,6BACI,yBAAKC,UAAU,SAAf,qBACI,yBAAKA,UAAU,QAAf,+IAEI,uBAAGC,MAAO,CAAC,WAAc,SAAzB,+EACA,uBAAGD,UAAU,sBAAb,uEACA,6BACA,6BACA,yBAAKA,UAAU,YAAf,qBAFA,oqBAOA,yBAAKA,UAAU,mCAAf,8FAA4I,6BAC5I,0BAAMC,MAAQC,KAAKC,MAAMC,QAAU,CAAC,QAAW,QAAU,IAAzD,uLAEA,6BAVA,wGAYA,6BACA,0BAAMJ,UAAU,YAAhB,YAAoC,0BAAMA,UAAU,aAAhB,QAApC,iGAEA,8BAEJ,6BACI,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASL,KAAKC,MAAMK,WAAhD,c,GA3BFC,IAAMC,WCyDbC,G,wDAvDX,WAAYR,GAAQ,IAAD,sBACf,cAAMA,GACN,IAAIL,EAAUc,EAAQ,IAFP,OAGf,EAAKC,MAAQ,CACTC,iBAAkBhB,EAAQtB,GAC1BuC,iBAAkBjB,EAAQtB,IALf,E,qDAUT,IAAD,OACL,OACI,6BACK0B,KAAKW,MAAMC,iBAAiBE,KAAI,SAACtC,EAAUuC,GAAX,OAC7B,yBAAKC,IAAKD,EAAMjB,UAAU,YACtB,8BAAOtB,EAASA,UAChB,yBAAKwC,IAAKD,GACLvC,EAASC,QAAQqC,KAAI,SAACG,EAAQC,GAAT,OAClB,yBAAKpB,UAAU,SAASkB,IAAKE,GACzB,2BAAOF,IAAKE,EAAMC,KAAK,QAAQC,KAAM5C,EAASD,GAAI8C,MAAOJ,EAAQZ,QAAS,kBAAM,EAAKJ,MAAMqB,cAAc9C,EAASD,GAAI0C,MACtH,2BAAOlB,MAAO,CAAC,QAAW,UACrBkB,YAOzB,6BACCjB,KAAKW,MAAME,iBAAiBC,KAAI,SAACtC,EAAUuC,GAAX,OAC7B,yBAAKC,IAAKD,EAAMjB,UAAU,YACtB,8BAAOtB,EAASA,UAChB,yBAAKwC,IAAKD,GACN,2BAAOI,KAAK,QAAQI,IAAI,IAAIC,IAAI,MAAMzB,MAAS,EAAKE,MAAMwB,oBAAoBjD,EAASD,IAA+B,GAAzB,CAACmD,WAAY,WAC1GC,KAAK,IAAIC,SAAU,SAACC,GAAW,EAAK5B,MAAMqB,cAAc9C,EAASD,GAAIsD,EAAMC,OAAOT,QAClFhB,QAAS,SAACwB,GAAW,EAAK5B,MAAMqB,cAAc9C,EAASD,GAAIsD,EAAMC,OAAOT,UACxE,yBAAKvB,UAAU,eACP,0BAAMA,UAAU,cAAcC,MAAO,CAACgC,UAAW,OAAQC,MAAO,QAAhE,KACA,0BAAMlC,UAAU,cAAcC,MAAO,CAACgC,UAAW,QAASC,MAAO,QAAjE,MAER,yBAAKlC,UAAU,gBACX,0BAAMC,MAAO,CAACkC,MAAO,SAAUzD,EAASC,QAAQ,IAEhD,0BAAMsB,MAAO,CAACkC,MAAO,UAAWzD,EAASC,QAAQ,UAKjE,kC,GAjDa8B,IAAMC,YC+EpB0B,E,kDA9EX,WAAYjC,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACTwB,aAAa,EACbC,UAAW,GACXC,KAAM,IAAIC,MAEd,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKlB,cAAgB,EAAKA,cAAckB,KAAnB,gBACrB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKf,oBAAsB,EAAKA,oBAAoBe,KAAzB,gBAVZ,E,wDAef,IAAME,GAAc,IAAIJ,KAAStC,KAAKW,MAAM0B,MAAQ,IACpDM,QAAQC,IAAIF,GACR1C,KAAKW,MAAMwB,YACPO,EAAa,EACbG,MAAM,oEAEN7C,KAAKuC,sBACLvC,KAAKC,MAAM6C,SAAS,oBAGpBJ,EAAa,GACbG,MAAM,4DAEFE,OAAOC,KAAKhD,KAAKW,MAAMyB,WAAWlE,OAAS,EAC3C2E,MAAM,mCAEN7C,KAAKC,MAAMgD,gBAAgBjD,KAAKW,MAAMyB,WACtCpC,KAAKC,MAAMK,e,0CAMPU,GAChB,OAAQA,KAAOhB,KAAKW,MAAMyB,Y,4CAI1BpC,KAAKkD,SAAS,CAACf,aAAa,EAAOE,KAAM,IAAIC,S,oCAGnC/D,EAAI4E,GACd,IAAIC,EAAepD,KAAKW,MAAMyB,UAC9BgB,EAAa7E,GAAM4E,EACnBnD,KAAKkD,SAAS,CAACd,UAAWgB,M,+BAI1B,IAAIC,EACA1D,EAAcK,KAAKW,MAAMwB,YAAoH,8BAAtG,kBAAC,EAAD,CAAgBb,cAAetB,KAAKsB,cAAeG,oBAAqBzB,KAAKyB,sBAUxH,OATA4B,EAAU,6BACN,yBAAKvD,UAAU,SAAf,gBACA,yBAAKA,UAAU,WAAf,yWAKA,8BAGA,6BACI,6BACKuD,GAEL,6BACK1D,GAEL,kBAACQ,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASL,KAAKyC,WAA1C,a,GAzEIlC,IAAMC,WC0CX8C,E,kDAzCX,WAAYrD,GAAQ,IAAD,sBACf,cAAMA,GACN,IAAIL,EAAUc,EAAQ,IAChB6C,EAAa3D,EAAQlB,GAHZ,OAIf,EAAKiC,MAAQ,CACThB,UAAWC,EAAQ2D,EAAW,IAAIC,OAAOD,EAAW,IACpDE,mBAAoB9E,EAAY,CAAC,EAAKsB,MAAMtB,cAC5C+E,eAA4C,WAA3B,EAAKzD,MAAMtB,YAA4B,SAAW,IAPxD,E,qDAWT,IAAD,OACL,OACI,6BACKqB,KAAKW,MAAMhB,UAAUmB,KAAI,SAACtC,EAAUuC,GAAX,OACtB,yBAAKC,IAAKD,GACN,0BAAMjB,UAAU,YAAYtB,EAASA,SAAW,EAAKmC,MAAM8C,oBAC3D,yBAAKzC,IAAKD,GACN,2BAAOC,IAAKxC,EAASD,GAAKwC,EAC1BhB,MAAS,EAAKE,MAAMwB,oBAAoBjD,EAASD,GAAK,EAAKoC,MAAM+C,gBAA2C,GAAzB,CAAChC,WAAY,WAChGP,KAAK,QAAQI,IAAI,IAAIC,IAAI,MAAMG,KAAK,IACpCC,SAAU,SAACC,GAAW,EAAK5B,MAAMqB,cAAc9C,EAASD,GAAK,EAAKoC,MAAM+C,eAAgB7B,EAAMC,OAAOT,QACrGhB,QAAS,SAACwB,GAAW,EAAK5B,MAAMqB,cAAc9C,EAASD,GAAK,EAAKoC,MAAM+C,eAAgB7B,EAAMC,OAAOT,UACpG,yBAAKvB,UAAU,eACP,0BAAMA,UAAU,cAAcC,MAAO,CAACgC,UAAW,OAAQC,MAAO,UAAhE,KACA,0BAAMlC,UAAU,cAAcC,MAAO,CAACiC,MAAO,UAA7C,KACA,0BAAMlC,UAAU,cAAcC,MAAO,CAACgC,UAAW,QAASC,MAAO,UAAjE,MAER,yBAAKlC,UAAU,gBACX,0BAAMC,MAAO,CAACkC,MAAO,SAAUzD,EAASC,QAAQ,IAChD,0BAAMsB,MAAO,CAACkC,MAAO,SAAUF,UAAW,WAAYvD,EAASC,QAAQ,IACvE,0BAAMsB,MAAO,CAACkC,MAAO,UAAWzD,EAASC,QAAQ,e,GAhCrD8B,IAAMC,W,mDCkGnBmD,E,kDA9FX,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACTwB,aAAa,EACbC,UAAW,GACXC,KAAM,IAAIC,KACVsB,UAAU,EACVC,MAA6B,OAArB,EAAK5D,MAAM6D,MAAiBC,IAA+B,UAArB,EAAK9D,MAAM6D,MAAoBE,IAAYC,KAE7F,EAAK1B,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKlB,cAAgB,EAAKA,cAAckB,KAAnB,gBACrB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKf,oBAAsB,EAAKA,oBAAoBe,KAAzB,gBAZZ,E,gEAeCxB,GAChB,OAAQA,KAAOhB,KAAKW,MAAMyB,Y,kCAI1B,IAAMM,GAAc,IAAIJ,KAAStC,KAAKW,MAAM0B,MAAQ,IACpDM,QAAQC,IAAIF,GACR1C,KAAKW,MAAMwB,YACPO,EAAa,GACbG,MAAM,kEAEN7C,KAAKC,MAAM6C,SAAS,wBACpB9C,KAAKuC,uBAGLG,EAAa,GACbG,MAAM,4DAEFE,OAAOC,KAAKhD,KAAKW,MAAMyB,WAAWlE,OAAS,EAC3C2E,MAAM,mCAEN7C,KAAKC,MAAMgD,gBAAgBjD,KAAKW,MAAMyB,WACtCpC,KAAKC,MAAMK,e,4CAOvBN,KAAKkD,SAAS,CAACf,aAAa,EAAOE,KAAM,IAAIC,S,oCAGnC/D,EAAI4E,GACd,IAAIC,EAAepD,KAAKW,MAAMyB,UAC9BgB,EAAa7E,GAAM4E,EACnBnD,KAAKkD,SAAS,CAACd,UAAWgB,M,+BAGpB,IACFC,EADC,OA8BL,OA3BIA,EADArD,KAAKW,MAAMwB,YACD,6BACN,yBAAKrC,UAAU,SAAf,2CAEA,6BACI,yBAAKoE,IAAKlE,KAAKW,MAAMkD,MAAOM,IAAI,kBAEpC,8BAGM,6BACN,6BACI,yBAAKrE,UAAU,YAAf,uGAGA,yBAAKA,UAAU,OAAOsE,aAAc,kBAAM,EAAKlB,SAAS,CAACU,UAAU,KAAQS,aAAc,kBAAM,EAAKnB,SAAS,CAACU,UAAU,MAAxH,2CAEI,6BACM5D,KAAKW,MAAMiD,SAAW,yBAAKM,IAAKlE,KAAKW,MAAMkD,MAAOM,IAAI,iBAAkB,QAItF,6BACA,6BACI,kBAAC,EAAD,CAAe7C,cAAetB,KAAKsB,cAAe3C,YAAaqB,KAAKC,MAAMtB,YAAa8C,oBAAqBzB,KAAKyB,wBAKzH,6BACI,6BACK4B,GAEL,kBAAClD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASL,KAAKyC,WAA1C,a,GAzFMlC,IAAMC,WC8Bb8D,E,kDAhCX,WAAYrE,GAAQ,IAAD,sBACf,cAAMA,GACN,IAAIL,EAAUc,EAAQ,IAFP,OAGf,EAAKC,MAAQ,CACTlC,QAASmB,EAAQb,IAJN,E,qDAST,IAAD,OACL,OACI,6BACI,yBAAKe,UAAU,SAAf,sDACA,6BACA,yBAAKA,UAAU,qBAAf,kGACA,yBAAKC,MAAO,CAACwE,OAAQ,SAChBvE,KAAKW,MAAMlC,QAAQqC,KAAI,SAACG,EAAQC,GAAT,OACpB,yBAAKF,IAAKE,GACN,2BAAOC,KAAK,QAAQC,KAAK,WAAWC,MAAOJ,EAAOuD,GAAInE,QAAS,kBAAM,EAAKJ,MAAMgD,gBAAgB,CAAC,SAAYhC,EAAO1C,QACpH,2BAAOwB,MAAO,CAAC0E,WAAY,QACtBxD,EAAOjC,WAKxB,6BACA,kBAACmB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAUL,KAAKC,MAAMwB,oBAAoB,YAAazB,KAAKC,MAAMK,UAAY,kBAAOuC,MAAM,iCAAtH,a,GA3BOtC,IAAMC,WC6FdkE,E,kDA3FX,WAAYzE,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACT0B,KAAM,IAAIC,KACVqC,SAAUzF,EAAU,EAAKe,MAAM6D,OAC/Bc,WAAY,EACZC,OAAQ,EAAK5E,MAAMhB,aACnB6F,QAAS,EAAK7E,MAAM6E,QACpB1C,UAAW,GACX2C,gBAAiBnF,IAAQT,IAG7B,EAAKsD,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKlB,cAAgB,EAAKA,cAAckB,KAAnB,gBAbN,E,0DAgBLjE,EAAI4E,GACd,IAAIC,EAAepD,KAAKW,MAAMyB,UAC9BgB,EAAa7E,GAAM4E,EACnBnD,KAAKkD,SAAS,CAACd,UAAWgB,M,kCAI1B,IAAM4B,EAAoC,QAAtBhF,KAAKW,MAAMkE,OAAmB,EAAI,EAChDI,EAA8B,QAAtBjF,KAAKW,MAAMkE,OAAmB,GAAK,EAEjD,IADoB,IAAIvC,KAAStC,KAAKW,MAAM0B,MAAQ,IAClC4C,GAAQjF,KAAKW,MAAMiE,WAAa,GAC9C/B,MAAM,iEAEN,GAAIE,OAAOC,KAAKhD,KAAKW,MAAMyB,WAAWlE,OAAU8G,GAAchF,KAAKW,MAAMiE,WAAa,GAClF/B,MAAM,uCAEN,GAAK7C,KAAKW,MAAMiE,WAAa,IAAO5E,KAAKW,MAAMgE,SAASzG,OAAQ,CAC5D,IAAIgH,EAAelF,KAAKW,MAAMyB,UAC9B,IAAK,IAAIpB,KAAOkE,EACZlF,KAAKC,MAAMqB,cAAcN,EAAKkE,EAAalE,IAE/ChB,KAAKC,MAAMkF,uBAGXnF,KAAKkD,SAAS,CAAC0B,WAAY5E,KAAKW,MAAMiE,WAAa,M,+BAMzD,IAAD,OACCQ,EAASpF,KAAKW,MAAMgE,SAAS3E,KAAKW,MAAMiE,YAE9C,OADAjC,QAAQC,IAAI5C,KAAKW,MAAMkE,QAEnB,6BACI,6BACK7E,KAAKW,MAAMoE,gBAAgBjE,KAAI,SAACtC,EAAUuC,GAAX,MACX,WAAhBvC,EAASD,IAA0C,QAAtB,EAAKoC,MAAMkE,QAA0C,QAAtB,EAAKlE,MAAMkE,OAKxE,yBAAK7D,IAAKD,EAAMjB,UAAU,YACtB,0BAAMA,UAAU,WAAWC,MAAO,CAACwE,OAAQ,QAAS/F,EAASY,QAAQ,CAAC,EAAKuB,MAAMkE,SAAjF,KACA,0BAAM/E,UAAU,qBAAqBC,MAAO,CAACwE,OAAQ,QAArD,IAA+Da,EAAOpG,KAAtE,KACA,0BAAMc,UAAU,WAAWC,MAAO,CAACwE,OAAQ,QAA3C,IAAqD/F,EAASgB,WAAW,CAAC,EAAKmB,MAAMkE,UACrF,yBAAK7D,IAAKD,GACN,2BAAOC,IAAKxC,EAASD,GAAKwC,EAC1BM,MAA0D,MAAjD,EAAKV,MAAMyB,UAAUgD,EAAO7G,GAAKC,EAASD,IAAc,GAAI,EAAKoC,MAAMyB,UAAUgD,EAAO7G,GAAKC,EAASD,IAC/GwB,MAAUqF,EAAO7G,GAAKC,EAASD,MAAO,EAAKoC,MAAMyB,UAAqC,GAAzB,CAACV,WAAY,WAAgBP,KAAK,QAAQI,IAAI,IAAIC,IAAI,MACnHG,KAAK,IACLC,SAAU,SAACC,GAAW,EAAKP,cAAc8D,EAAO7G,GAAKC,EAASD,GAAIsD,EAAMC,OAAOT,QAC/EhB,QAAS,SAACwB,GAAW,EAAKP,cAAc8D,EAAO7G,GAAKC,EAASD,GAAIsD,EAAMC,OAAOT,UAC9E,yBAAKvB,UAAU,eACX,0BAAMA,UAAU,cAAcC,MAAO,CAACgC,UAAW,SAAjD,KACA,0BAAMjC,UAAU,eAAhB,KACA,0BAAMA,UAAU,eAAhB,KACA,0BAAMA,UAAU,cAAcC,MAAO,CAACgC,UAAW,UAAjD,MAEJ,yBAAKjC,UAAU,gBACX,0BAAMA,UAAU,cAAcC,MAAO,CAACgC,UAAW,SAAUvD,EAASC,QAAQ,IAC5E,0BAAMqB,UAAU,eAAetB,EAASC,QAAQ,IAChD,0BAAMqB,UAAU,eAAetB,EAASC,QAAQ,IAChD,0BAAMqB,UAAU,cAAcC,MAAO,CAACgC,UAAW,UAAWvD,EAASC,QAAQ,OAzBzF,kCA+BR,kBAAC0B,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASL,KAAKyC,WAA1C,QAnCJ,IAmCuE,mC,GAtFtDlC,IAAMC,W,mDCsJpB6E,E,kDAjJX,WAAYpF,GAAQ,IAAD,sBACf,cAAMA,GACN,IAAIqF,EAAczH,EAAcoB,GAFjB,OAGf,EAAK0B,MAAQ,CACT0B,KAAM,IAAIC,KACViD,OAAQ,CAAC,QAAS,OAAQ,QAC1BC,YAAa,EACbpD,UAAW,GACXqD,YAAY,EACZxG,aAAcqG,EACdzB,MAAwB,QAAhByB,EAAwBI,IAA0B,QAAhBJ,EAAwBK,IAASC,KAG/E,EAAKnE,oBAAsB,EAAKA,oBAAoBe,KAAzB,gBAC3B,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKlB,cAAgB,EAAKA,cAAckB,KAAnB,gBACrB,EAAKqD,eAAiB,EAAKA,eAAerD,KAApB,gBAhBP,E,6DAoBfxC,KAAKkD,SAAS,CAACuC,YAAY,M,0CAGXzE,GAChB,OAAQA,KAAOhB,KAAKW,MAAMyB,Y,oCAGhB7D,EAAI4E,GACd,IAAIC,EAAepD,KAAKW,MAAMyB,UAC9BgB,EAAa7E,GAAM4E,EACnBnD,KAAKkD,SAAS,CAACd,UAAWgB,M,kCAI1B,IAAMV,GAAc,IAAIJ,KAAStC,KAAKW,MAAM0B,MAAQ,IACpDM,QAAQC,IAAIF,GACZ,IAAMoD,EAAY9F,KAAKW,MAAM4E,OAAOvF,KAAKW,MAAM6E,aAC/C,GAAkB,UAAdM,EACIpD,EAAa,GACbG,MAAM,kEAEN7C,KAAKkD,SAAS,CAACuC,YAAY,IAC3BzF,KAAKC,MAAM6C,SAAS,uBACpB9C,KAAKkD,SAAS,CAACsC,YAAaxF,KAAKW,MAAM6E,YAAc,UAEtD,GAAkB,SAAdM,EACP,GAAIpD,EAAa,GACbG,MAAM,gEACH,CACH,IAAIkD,EAAa,uBAAwB/F,KAAKW,MAAMyB,WAAe,oBAAqBpC,KAAKW,MAAMyB,WAAe,oBAAqBpC,KAAKW,MAAMyB,WAClJ2D,EAAYA,GAAc,oBAAqB/F,KAAKW,MAAMyB,YAMtDpC,KAAKC,MAAMgD,gBAAgBjD,KAAKW,MAAMyB,WACtCpC,KAAKC,MAAM+F,gBALXnD,MAAM,sCAQO,SAAdiD,GACP9F,KAAKsB,cAAc,cAAetB,KAAKW,MAAM1B,cAC7Ce,KAAKkD,SAAS,CAACsC,YAAaxF,KAAKW,MAAM6E,YAAc,IAGrDxF,KAAKC,MAAM6C,SAAS,eACpB9C,KAAKkD,SAAS,CAACuC,YAAY,KAE3B5C,MAAM,2B,+BAIJ,IACFQ,EADC,OAECyC,EAAY9F,KAAKW,MAAM4E,OAAOvF,KAAKW,MAAM6E,aA2D/C,OAzDInC,EADc,UAAdyC,EACU,6BACN,yBAAKhG,UAAU,SAAf,wGACA,yBAAKA,UAAU,YAAf,6IAGA,6BACI,yBAAKoE,IAAKlE,KAAKW,MAAMkD,MAAOM,IAAI,kBAEpC,8BAGiB,SAAd2B,EACG,6BACN,6BACI,yBAAKhG,UAAU,YAAf,yGAGA,yBAAKA,UAAU,OAAOsE,aAAc,kBAAM,EAAKlB,SAAS,CAACU,UAAU,KAAQS,aAAc,kBAAM,EAAKnB,SAAS,CAACU,UAAU,MAAxH,2CAEI,6BACM5D,KAAKW,MAAMiD,SAAW,yBAAKM,IAAKlE,KAAKW,MAAMkD,MAAOM,IAAI,iBAAkB,QAItF,6BACA,6BACI,kBAAC,EAAD,CAAe7C,cAAetB,KAAKsB,cAAe3C,YAAa,SAAU8C,oBAAqBzB,KAAKyB,wBAGtF,SAAdqE,EACG,6BACN,6BACI,yBAAKhG,UAAU,YACmB,QAA5BE,KAAKW,MAAM1B,aACb,qKACA,kLAEJ,yBAAKa,UAAU,OAAOsE,aAAc,kBAAM,EAAKlB,SAAS,CAACU,UAAU,KAAQS,aAAc,kBAAM,EAAKnB,SAAS,CAACU,UAAU,MAAxH,2CAEI,6BACM5D,KAAKW,MAAMiD,SAAW,yBAAKM,IAAKlE,KAAKW,MAAMkD,MAAOM,IAAI,iBAAkB,QAItF,6BACA,6BACI,kBAAC,EAAD,CAAgB7C,cAAetB,KAAKsB,cACpCG,oBAAqBzB,KAAKyB,oBAC1B0D,gBAAiBnF,KAAKyC,UACtBqB,MAAO9D,KAAKC,MAAM6D,MAClBgB,QAAS9E,KAAKC,MAAM6E,QACpB7F,aAAce,KAAKW,MAAM1B,iBAIvB,kBAGV,6BACI,6BACKoE,GAEFrD,KAAKW,MAAM8E,WAAiF,8BAApE,kBAACtF,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASL,KAAKyC,WAA1C,a,GA3ItBlC,IAAMC,WCuEZyF,E,kDA1EX,WAAYhG,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACT0B,KAAM,IAAIC,KACV3C,UAAWC,IAAQH,GACnB2C,UAAW,IAGf,EAAKd,cAAgB,EAAKA,cAAckB,KAAnB,gBACrB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBATF,E,0DAYLjE,EAAI4E,GACd,IAAIC,EAAepD,KAAKW,MAAMyB,UAC9BgB,EAAa7E,GAAM4E,EACnBnD,KAAKkD,SAAS,CAACd,UAAWgB,M,kCAI1B,IAAMV,GAAc,IAAIJ,KAAStC,KAAKW,MAAM0B,MAAQ,IACpDM,QAAQC,IAAIF,GACRA,EAAa,GACbG,MAAM,kDAEFE,OAAOC,KAAKhD,KAAKW,MAAMyB,WAAWlE,OAAS,GAC3C2E,MAAM,mCAEN7C,KAAKC,MAAMgD,gBAAgBjD,KAAKW,MAAMyB,WACtCpC,KAAKC,MAAMK,e,+BAKb,IAAD,OACL,OACI,6BACI,yBAAKR,UAAU,SAAf,qFAGA,yBAAKA,UAAU,YAAf,8DAGA,6BACA,6BACKE,KAAKW,MAAMhB,UAAUmB,KAAI,SAACtC,EAAUuC,GAAX,OAC1B,yBAAKC,IAAKD,GACN,0BAAMjB,UAAU,YAAYtB,EAASQ,MACrC,yBAAKgC,IAAKD,GACN,2BAAOC,IAAKxC,EAASD,GAAKwC,EAC1BhB,MAASvB,EAASD,MAAM,EAAKoC,MAAMyB,UAAqC,GAAzB,CAACV,WAAY,WAC5DP,KAAK,QAAQI,IAAI,IAAIC,IAAI,MAAMG,KAAK,IACpCC,SAAU,SAACC,GAAW,EAAKP,cAAc9C,EAASD,GAAIsD,EAAMC,OAAOT,QACnEhB,QAAS,SAACwB,GAAW,EAAKP,cAAc9C,EAASD,GAAIsD,EAAMC,OAAOT,UAClE,yBAAKvB,UAAU,eACP,0BAAMA,UAAU,cAAcC,MAAO,CAACgC,UAAW,OAAQC,MAAO,UAAhE,KACA,0BAAMlC,UAAU,cAAcC,MAAO,CAACiC,MAAO,UAA7C,KACA,0BAAMlC,UAAU,cAAcC,MAAO,CAACgC,UAAW,QAASC,MAAO,UAAjE,MAER,yBAAKlC,UAAU,gBACX,0BAAMC,MAAO,CAACkC,MAAO,SAAUxC,EAAa,IAC5C,0BAAMM,MAAO,CAACkC,MAAO,SAAUF,UAAW,WAAYtC,EAAa,IACnE,0BAAMM,MAAO,CAACkC,MAAO,UAAWxC,EAAa,WAM7D,6BACA,kBAACU,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASL,KAAKyC,WAA1C,a,GArEMlC,IAAMC,W,iBC6Gb0F,G,kDA3GX,WAAYjG,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACT0B,KAAM,IAAIC,KACVF,UAAW,GACX+D,qBAAsBvG,IAAQF,IAGlC,EAAK4B,cAAgB,EAAKA,cAAckB,KAAnB,gBACrB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBATF,E,0DAYLjE,EAAI4E,GACd,IAAIC,EAAepD,KAAKW,MAAMyB,UAC9BgB,EAAa7E,GAAM4E,EACnBnD,KAAKkD,SAAS,CAACd,UAAWgB,M,kCAI1B,IAAMV,GAAc,IAAIJ,KAAStC,KAAKW,MAAM0B,MAAQ,IACpDM,QAAQC,IAAIF,GACRA,EAAa,GACbG,MAAM,kDAEFE,OAAOC,KAAKhD,KAAKW,MAAMyB,WAAWlE,OAAS,GAC3C2E,MAAM,mCAEN7C,KAAKC,MAAMgD,gBAAgBjD,KAAKW,MAAMyB,WACtCpC,KAAKC,MAAMK,e,+BAKb,IACF+C,EAAS+C,EADR,OAEL/C,EAAU,CAAC,yBAAKrC,IAAI,QAChB,yBAAKlB,UAAU,SAAf,wDACA,yBAAKA,UAAU,YAAf,mFAEJ,IAAK,IAAIuG,EAAE,EAAGA,EAAIrG,KAAKW,MAAMwF,qBAAqBjI,OAAQmI,IAE9B,UADxBD,EAAepG,KAAKW,MAAMwF,qBAAqBE,IAC9B9H,GACb8E,EAAO,sBAAOA,GAAP,CAAgB,wBAAIrC,IAAK,KAAOqF,IACvC,yBAAKrF,IAAK,MAAQqF,GACbD,EAAazG,UAAUmB,KAAI,SAACtC,EAAUuC,GAAX,OACxB,yBAAKC,IAAKD,GACN,0BAAMjB,UAAU,YAAYtB,EAASA,UACrC,yBAAKwC,IAAKD,GACN,2BAAOC,IAAKxC,EAASD,GAAKwC,EAC1BhB,MAASvB,EAASD,MAAM,EAAKoC,MAAMyB,UAAqC,GAAzB,CAACV,WAAY,WAC5DP,KAAK,QAAQI,IAAI,IAAIC,IAAI,MAAMG,KAAK,IACpCC,SAAU,SAACC,GAAW,EAAKP,cAAc9C,EAASD,GAAIsD,EAAMC,OAAOT,QACnEhB,QAAS,SAACwB,GAAW,EAAKP,cAAc9C,EAASD,GAAIsD,EAAMC,OAAOT,UAClE,yBAAKvB,UAAU,eACP,0BAAMA,UAAU,cAAcC,MAAO,CAACgC,UAAW,OAAQC,MAAO,UAAhE,KACA,0BAAMlC,UAAU,cAAcC,MAAO,CAACiC,MAAO,UAA7C,KACA,0BAAMlC,UAAU,cAAcC,MAAO,CAACgC,UAAW,QAASC,MAAO,UAAjE,MAER,yBAAKlC,UAAU,gBACX,0BAAMC,MAAO,CAACkC,MAAO,SAAUzD,EAASC,QAAQ,IAChD,0BAAMsB,MAAO,CAACkC,MAAO,SAAUF,UAAW,WAAYvD,EAASC,QAAQ,IACvE,0BAAMsB,MAAO,CAACkC,MAAO,UAAWzD,EAASC,QAAQ,aAM1C,YAApB2H,EAAa7H,IAAwC,kBAApB6H,EAAa7H,IAA8C,aAApB6H,EAAa7H,GAC5F8E,EAAO,sBAAOA,GAAP,CAAgB,wBAAIrC,IAAK,KAAOqF,IACvC,yBAAKrF,IAAK,MAAQqF,GACbD,EAAazG,UAAUmB,KAAI,SAACtC,EAAUuC,GAAX,OACxB,yBAAKC,IAAKD,GACN,0BAAMjB,UAAU,YAAYtB,EAASA,UACrC,yBAAKwC,IAAKD,GACLvC,EAASC,QAAQqC,KAAI,SAACG,EAAQC,GAAT,OAClB,yBAAKpB,UAAU,SAASkB,IAAKE,GACzB,2BAAOF,IAAKE,EAAMC,KAAK,QAAQC,KAAM5C,EAASD,GAAI8C,MAAOJ,EAAQZ,QAAS,kBAAM,EAAKiB,cAAc9C,EAASD,GAAI0C,MAChH,2BAAOlB,MAAO,CAAC,QAAW,UACrBkB,eAQF,UAApBmF,EAAa7H,KACpB8E,EAAO,sBAAOA,GAAP,CAAgB,wBAAIrC,IAAK,KAAOqF,IACvC,yBAAKrF,IAAK,MAAQqF,GACd,yBAAKvG,UAAU,YAAYsG,EAAazG,WACxC,kBAAC,KAAD,CAAQ2G,QAASF,EAAa3H,QAASmD,SAAU,SAACP,GAAD,OAAW,EAAKC,cAAc,QAASD,EAAK,cAKzG,OACI,6BACI,6BACKgC,GAEL,6BACA,kBAAClD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASL,KAAKyC,WAA1C,a,GAtGWlC,IAAMC,W,oBCGlB+F,GAVA,CACXC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,6CC4HIC,G,kDApHb,WAAY9G,GAAQ,IAAD,sBACjB,cAAMA,GACN,IACM+G,EADctG,EAAQ,IACDuG,MAAM,EAAKhH,MAAMiH,SAASC,QAHpC,OAIjB,EAAKxG,MAAQ,CACXsE,KAAM,CAAC,KAAQ,IAAI3C,MACnB8E,WAAYJ,EAAOK,cAGnBvC,QAASjH,EAAcM,GACvB2F,MAAOjG,EAAcO,GACrBO,YAAad,EAAcQ,GAC3BkH,OAAQ,CAAC,UAAW,QAAS,UAAW,MAAO,SAAU,OAAQ,eAAgB,OACjFC,YAAa,EACbpD,UAAW,IAGb,EAAKa,gBAAkB,EAAKA,gBAAgBT,KAArB,gBACvB,EAAKM,SAAW,EAAKA,SAASN,KAAd,gBAChB,EAAKlC,UAAY,EAAKA,UAAUkC,KAAf,gBACjB,EAAK8E,2BAA6B,EAAKA,2BAA2B9E,KAAhC,gBAClC,EAAK+E,eAAiB,EAAKA,eAAe/E,KAApB,gBACtB,EAAKf,oBAAsB,EAAKA,oBAAoBe,KAAzB,gBAE3BgF,KAASC,cAAclB,IAxBN,E,gEA2BCvF,GAClB,OAAQA,KAAOhB,KAAKW,MAAMyB,Y,sCAGZsF,GACd,IAAIxC,EAAelF,KAAKW,MAAMyB,UAC9B,IAAK,IAAIpB,KAAO0G,EACZxC,EAAalE,GAAO0G,EAAK1G,GAE7BhB,KAAKkD,SAAS,CAACd,UAAW8C,M,+BAGnByC,GACP,IAAMjF,EAAa,IAAIJ,KAAStC,KAAKW,MAAMsE,KAAX,KAChCjF,KAAKkD,SAAS,CAAC+B,KAAK,eAAKjF,KAAKW,MAAMsE,KAAjB,eAAwB0C,EAAWjF,Q,kCAKtD1C,KAAK8C,SAAS9C,KAAKW,MAAM4E,OAAOvF,KAAKW,MAAM6E,aAAe,OAC1DxF,KAAKkD,SAAS,CAACsC,YAAaxF,KAAKW,MAAM6E,YAAc,M,uCAGrC,IAAD,OACXoC,EAAe5H,KAAKW,MAAMyB,UAC9BwF,EAAa9C,QAAU9E,KAAKW,MAAMmE,QAClC8C,EAAa9D,MAAQ9D,KAAKW,MAAMmD,MAChC8D,EAAajJ,YAAcqB,KAAKW,MAAMhC,YACtCiJ,EAAaR,WAAapH,KAAKW,MAAMyG,WAGrC,IAAMS,EAAQ7H,KAAKW,MAAMsE,KACzB,IAAK,IAAI6C,KAAWD,EAChBD,EAAaE,GAAWD,EAAMC,GAElCN,KAASO,WAAWC,IAAI,aAAehI,KAAKW,MAAMyG,YAAYa,IAAIL,GAAcM,OAAM,SAAAC,GAAK,OAAIxF,QAAQC,IAAIuF,MAAQC,MAAK,kBAAM,EAAKd,kC,mDAMnIe,OAAOC,KADI,sDACO,W,+BAGlB,IACIjF,EADEkF,EAAQvI,KAAKW,MAAM4E,OAAOvF,KAAKW,MAAM6E,aAqC7C,OAlCInC,EADY,YAAVkF,EACQ,kBAAC,EAAD,CAASjI,UAAWN,KAAKM,YAChB,UAAViI,EACC,kBAAC,EAAD,CAAOjI,UAAWN,KAAKM,UAAW2C,gBAAiBjD,KAAKiD,gBAAiBH,SAAU9C,KAAK8C,WAC/E,YAAVyF,EACC,kBAAC,EAAD,CAASjI,UAAWN,KAAKM,UACnC2C,gBAAiBjD,KAAKiD,gBAAiBtE,YAAaqB,KAAKW,MAAMhC,YAC/DmF,MAAO9D,KAAKW,MAAMmD,MAAOgB,QAAS9E,KAAKW,MAAMmE,QAAShC,SAAU9C,KAAK8C,WAClD,QAAVyF,EACC,kBAAC,EAAD,CAAUjI,UAAWN,KAAKM,UAAW2C,gBAAiBjD,KAAKiD,gBAAiBxB,oBAAqBzB,KAAKyB,sBAC7F,WAAV8G,EACC,kBAAC,EAAD,CAAQvC,aAAchG,KAAKM,UACrC2C,gBAAiBjD,KAAKiD,gBAAiBa,MAAO9D,KAAKW,MAAMmD,MACzDgB,QAAS9E,KAAKW,MAAMmE,QAAShC,SAAU9C,KAAK8C,WACzB,SAAVyF,EACC,kBAAC,EAAD,CAASjI,UAAWN,KAAKM,UAAW2C,gBAAiBjD,KAAKiD,kBACjD,iBAAVsF,EACC,kBAAC,GAAD,CAAcjI,UAAWN,KAAKM,UAAW2C,gBAAiBjD,KAAKiD,kBACtD,QAAVsF,EACC,6BACE,yBAAKzI,UAAU,SAAf,8CACA,yBAAKA,UAAU,YAAf,6EAEI,8BAEJ,yBAAKA,UAAU,kBACX,0BAAMA,UAAU,gCAAhB,qDACA,yBAAKA,UAAU,kBACX,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASL,KAAKuH,gBAA1C,sBAKV,yBAAKzH,UAAU,SAAf,mEAGZ,yBAAKA,UAAU,OACZuD,O,GA/GW9C,IAAMC,WCFJgI,QACW,cAA7BH,OAAOnB,SAASuB,UAEe,UAA7BJ,OAAOnB,SAASuB,UAEhBJ,OAAOnB,SAASuB,SAASC,MACvB,2D,4BCVAC,GACJ,kBAAC,KAAD,KACE,6BACE,kBAAC,KAAD,CAAOC,KAAK,IAAIC,UAAW9B,OAKjC+B,IAASC,OAAOJ,GACdK,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhB,MAAK,SAAAiB,GACJA,EAAaC,gBAEdpB,OAAM,SAAAC,GACLxF,QAAQwF,MAAMA,EAAMoB,c","file":"static/js/main.d2d33c9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AI.009932ce.png\";","module.exports = __webpack_public_path__ + \"static/media/human.170a0e83.png\";","module.exports = __webpack_public_path__ + \"static/media/human-AI.224d0a77.png\";","module.exports = __webpack_public_path__ + \"static/media/pos_.62f648b1.png\";","module.exports = __webpack_public_path__ + \"static/media/neg_.2a9d07ee.png\";","module.exports = __webpack_public_path__ + \"static/media/con_.b738c7a7.png\";","import shuffle from 'shuffle-array';\r\n\r\nexport function getRandomItem(items) {return items[Math.floor(Math.random()*items.length)];}\r\n\r\nexport const treatDiseases = [\"COVID-19\"];\r\nexport const treatAgents = [\"human\", \"human-AI\", \"AI\"];\r\nexport const treatTimes = [\"after\"];\r\n\r\nexport const introQuestions = {\r\n    contact: [\r\n        {id: \"cityLevel\", question: \"Has there been a case of COVID-19 in your city?\", answers: [\"Yes\", \"No\", \"I don't know\"]},\r\n        {id: \"personalLevel\", question: \"Have you or anyone you know been infected by the new coronavirus?\", answers: [\"Yes\", \"No\", \"I don't know\"]},\r\n        {id: \"symptomLevel\", question: \"Have you or anyone you know showed any of the following symptoms? Fever, cough, sore throat, shortness of breath.\" , answers: [\"Yes\", \"No\", \"I am not sure\"]}\r\n    ],\r\n    concern: [\r\n        //{id: \"closeLikelihood\", question: \"How likely do you think it is that COVID-19 will affect your family, friends, and neighbors?\", answers: [\"Not likely at all\", \"Very likely\"]},\r\n        {id: \"illLikelihood\", question: \"How likely are you to become ill with COVID-19?\", answers: [\"Not likely at all\", \"Very likely\"]},\r\n        {id: \"severeness\", question: \"How severe do you think the economic consequences of COVID-19 will be to you?\", answers: [\"Not severe at all\", \"Very severe\"]},\r\n        {id: \"closeDeath\", question: \"If you become infected with COVID-19, how likely do you believe it is that you might fall severely ill or die from it?\", answers: [\"Not likely at all\", \"Very likely\"]},\r\n        {id: \"concern\", question: \"How concerned are you about getting COVID-19?\", answers: [\"Not concerned at all\", \"Very concerned\"]}\r\n    ]\r\n}\r\n\r\n// export const willQuestions = [\r\n//     [{id: \"personalWill\", question: \"How willing would you be to get a shot of this new vaccine \", answers: [\"Not willing at all\", \"I am not sure\", \"Very willing\"]},\r\n//      {id: \"childWill\", question: \"How willing would you be to take a child to get a shot of this new vaccine \", answers: [\"Not willing at all\", \"I am not sure\", \"Very willing\"]},\r\n//      {id: \"elderWill\", question: \"How willing would you be to take an elder (over 65 yrs. old) to get a shot of this new vaccine \", answers: [\"Not willing at all\", \"I am not sure\", \"Very willing\"]}],\r\n//     [{id: \"worriness\", question: \"How worried would you be about getting a shot of this new vaccine \", answers: [\"Not worried at all\", \"I am not sure\", \"Very worried\"]},\r\n//      {id: \"riskness\", question: \"How risky do you think it would be for someone to get a shot of this new vaccine \", answers: [\"Not risky at all\", \"I am not sure\", \"Very risky\"]}]\r\n// ]\r\n\r\n// export const beforeAfter = {\r\n//     before: \"before the final approval by the U.S. Food and Drug Administration (FDA)?\",\r\n//     after: \"after the final approval by the U.S. Food and Drug Administration (FDA)?\",\r\n//     future: \"approved by the U.S. Food and Drug Administration (FDA)?\"\r\n// }\r\n\r\nexport const willQuestions = [\r\n    [{id: \"personalWill\", question: \"How willing are you to get this new vaccine\", answers: [\"Not willing at all\", \"I am not sure\", \"Very willing\"]},\r\n     {id: \"childWill\", question: \"How willing are you to get this new vaccine for your child\", answers: [\"Not willing at all\", \"I am not sure\", \"Very willing\"]},\r\n     {id: \"elderWill\", question: \"How willing are you to get this new vaccine for your elders (over 65 yrs. old)\", answers: [\"Not willing at all\", \"I am not sure\", \"Very willing\"]}],\r\n    [{id: \"worriness\", question: \"How worried would you be about getting this new vaccine\", answers: [\"Not worried at all\", \"I am not sure\", \"Very worried\"]},\r\n     //{id: \"riskness\", question: \"How concerned are you that this vaccine shot might not be safe\", answers: [\"Not risky at all\", \"I am not sure\", \"Very risky\"]}\r\n    ]\r\n]\r\n\r\nexport const beforeAfter = {\r\n    before: \"?\",\r\n    after: \"?\",\r\n    future: \"?\"\r\n}\r\n\r\n\r\nexport const attentionCheck = {\r\n    answers: [\r\n        {id: \"public\", text: \"The general public\"},\r\n        {id: \"human\", text: \"A team of researchers\"},\r\n        {id: \"AI\", text: \"An artificial intelligence program\"},\r\n        {id: \"human-AI\", text: \"A team of researchers with the help of an artificial intelligence program\"}]\r\n};\r\n\r\nexport const consequences = [\r\n    \"neg\", \"pos\", \"con\"\r\n]\r\n\r\nexport const agentText = {\r\n    \"human\":  [\r\n        {id: \"researchers\", text: \"the team of researchers\"},\r\n        //{id: \"AI\", text: \"is SAM, the artificial intelligence program,\"},\r\n        //{id: \"company\", text: \"SAM's (the AI programs's) developing company\"},\r\n        {id: \"government\", text: \"the goverment\"},\r\n        {id: \"worker\", text: \"the health care worker who administers the vaccines\"},\r\n        //{id: \"programmer\", text: \"is SAM's (the AI program's) main programmer\"}\r\n    ],\r\n    \"human-AI\": [\r\n        {id: \"researchers\", text: \"the team of researchers\"},\r\n        {id: \"AI\", text: \"SAM, the AI program,\"},\r\n        {id: \"company\", text: \"SAM's (the AI programs's) developing company\"},\r\n        {id: \"government\", text: \"the goverment\"},\r\n        {id: \"worker\", text: \"the health care worker who administers the vaccines\"},\r\n        {id: \"programmer\", text: \"SAM's (the AI program's) main programmer\"}\r\n    ], \r\n    \"AI\": [\r\n        {id: \"researchers\", text: \"the team of researchers, who solely synthesized the vaccine,\"},\r\n        {id: \"AI\", text: \"SAM, the AI program,\"},\r\n        {id: \"company\", text: \"SAM's (the AI programs's) developing company\"},\r\n        {id: \"government\", text: \"the goverment\"},\r\n        {id: \"worker\", text: \"the health care worker who administers the vaccines\"},\r\n        {id: \"programmer\", text: \"SAM's (the AI program's) main programmer\"}\r\n    ]\r\n}\r\n\r\n\r\nexport const agentQuestions = [\r\n    // {id: \"Resp\",\r\n    //  initial: {pos: \"How responsible is \", neg: \"How responsible is \", con: \"How responsible is \"},\r\n    //  conclusion: {pos: \" for the effectiveness of the COVID-19 vaccine?\",\r\n    //               neg: \" for the side effects of the COVID-19 vaccine?\",\r\n    //               con: \" for the COVID-19 vaccine?\"},\r\n    //  answers: [\"Not responsible at all\", \"Somewhat responsible\", \"Responsible\", \"Very responsible\"]\r\n    // },\r\n    {id: \"Blame\",\r\n     initial: {pos: \"How much credit does \", neg: \"How much blame does \", con: \"How much credit does \"},\r\n     conclusion: {pos: \" deserve for the effectiveness of the COVID-19 vaccine?\", \r\n                  neg: \" deserve for the side effects of the COVID-19 vaccine?\",\r\n                  con: \" deserve for the development of the COVID-19 vaccine?\"},\r\n     answers: [\"None at all\", \"A little\", \"Some\", \"A lot\"]\r\n    },\r\n    {id: \"Aware\",\r\n     initial: {pos: \"How much do you think \", neg: \"How much do you think \", con: \"How much do you think \"},\r\n     conclusion: {pos: \" should have been aware of the effectiveness of the COVID-19 vaccine?\",\r\n                  neg: \" should have been aware of the side effects of the COVID-19 vaccine?\",\r\n                  con: \" should have been aware of the development of the COVID-19 vaccine?\"},\r\n     answers: [\"Not aware at all\", \"Not really aware\", \"Somewhat aware\", \"Very aware\"]\r\n    },\r\n    {id: \"Punish\",\r\n    initial: {pos: \"How much should \", neg: \"How much should \", con: \"How much should \"},\r\n    conclusion: {pos: \" be punished for the side effects of the COVID-19 vaccine?\", \r\n                 neg: \" be punished for the side effects of the COVID-19 vaccine?\",\r\n                 con: \" be punished for the side effects of the COVID-19 vaccine?\"},\r\n    answers: [\"Not at all\", \"A little\", \"Some\", \"A lot\"]\r\n   },\r\n\r\n]\r\n\r\nexport const MMMS = {\r\n    answers: [\"Strongly disagree\", \"Neither agree nor disagree\", \"Strongly agree\"],\r\n    questions: [\r\n        {id: \"mmms0\", text: \"It is important to treat disease even when it does not make a difference in survival\"},\r\n        {id: \"mmms1\", text: \"It is important to treat a disease even when it does not make a difference in quality of life\"},\r\n        {id: \"mmms2\", text: \"Doing everything to fight illness is always the right choice\"},\r\n        {id: \"mmms3\", text: \"When it comes to health care, the only responsible thing to do is to actively seek medical care\"},\r\n        {id: \"mmms4\", text: \"If I have a health issue, my preference is to wait and see if the problem gets better on its own before going to the doctor\"},\r\n        {id: \"mmms5\", text: \"If I feel unhealthy, the first thing that I do is to go to the doctor and get a prescription\"},\r\n        {id: \"mmms6\", text: \"I often suggest that friends and family see their doctor\"},\r\n        {id: \"mmms7\", text: \"When it comes to health care, watching and waiting is never an acceptable option\"},\r\n        {id: \"mmms8\", text: \"If I have a medical problem, my preference is to go straight to a doctor and ask his or her opinion\"},\r\n        {id: \"mmms9\", text: \"When it comes to medical treatment, more is usually better\"}\r\n\r\n    ]\r\n\r\n}\r\n\r\nexport const demographics = [\r\n    {id: \"govt\", questions: shuffle([\r\n        {id: \"govtOpen\", question: \"How open do you think the UK government is with information regarding COVID-19?\", answers: [\"Not open at all\", \" I am not sure\", \"Very open\"]},\r\n        {id: \"govtHonest\", question: \"How honest do you think the UK government is with information regarding COVID-19?\", answers: [\"Not honest at all\", \" I am not sure\", \"Very honest\"]},\r\n        {id: \"govtCompetent\", question: \"How competent do you believe the UK government is in handling COVID-19?\", answers: [\"Not competent at all\", \" I am not sure\", \"Very competent\"]},\r\n        {id: \"govtCommitment\", question: \"How committed do you believe the UK government is to protect you from COVID-19?\", answers: [\"Not committed at all\", \" I am not sure\", \"Very committed\"]},\r\n        {id: \"govtCare\", question: \"How much caring and concern do you think the UK government has shown about people who might be affected by this COVID-19 outbreak?\", answers: [\"Not much at all\", \" I am not sure\", \"Very much\"]},\r\n        {id: \"govtBelief\", question: \"How much do you believe that the UK government’s actions in response to COVID-19 are in your personal best interest?\", answers: [\"I don't believe\", \" I am not sure\", \"I do believe\"]},\r\n        {id: \"govtProtect\", question: \"How much do you believe the UK government will protect you from COVID-19?\", answers: [\"Not much at all\", \" I am not sure\", \"Very much\"]}\r\n    ])},\r\n    {id: \"newsSNS\", questions: shuffle([\r\n        {id: \"socialMediaNews\", question: \"On average, how many news links regarding COVID-19 have you accessed through social media in the last week?\", answers: [\"0 links\", \"1-5 links\", \"5-10 links\", \"Over 10 links\"]},\r\n        {id: \"news\", question: \"How often do you proactively check the news regarding COVID-19?\", answers: [\"Never\", \"Once a few days\", \"Once a day\", \"More than once a day\"]},\r\n        {id: \"socialMediaLastWeek\", question: \"How often have you accessed any social media platform in the last week?\", answers: [\"Never\", \"Once a few days\", \"Once every day\", \"Many times a day\"]},\r\n        {id: \"socialMediaDaily\", question: \"How much time do you usually spend daily on any social media platform?\", answers: [\"None\", \"Less than 30 minutes\", \"Around 1 hour\", \"2 hours or more\"]},\r\n        {id: \"acquaintances\", question: \"How many people, excluding your household members, do you interact face-to-face daily these days (either online or offline)?\", answers: [\"None\", \"Less than 5 people\", \"Around 5-10 people\", \"More than 10 people\"]}\r\n    ])},\r\n    {id: \"personalCovid\", questions: shuffle([\r\n        {id: \"insurance\", question: \"Do you have health insurance at the moment?\", answers: [\"Yes\", \"No\"]},\r\n        {id: \"eldersLive\", question: \"Do you live with any elders (over 65 years old)?\", answers: [\"Yes\", \"No\"]},\r\n        {id: \"childLive\", question: \"Do you live with any children?\", answers: [\"Yes\", \"No\"]},\r\n        {id: \"vaccinationFlu\", question: \"How often in the past have you gotten a flu vaccination?\", answers: [\"Never\", \"Once or twice\", \"More than twice but not annually\", \"Annually\"]},\r\n        {id: \"vaccination\", question: \"Have you gotten shots of the required vaccines in the past?\", answers: [\"All of them\", \"Some\", \"Never\"]}\r\n    ])},\r\n    {id: \"personal\", questions: shuffle([\r\n        {id: \"sex\", question: \"What is your sex?\", answers: [\"Female\", \"Male\", \"Other\"]},\r\n        {id: \"age\", question: \"How old are you?\", answers: [\"Less than 18 years old\", \"18-24 years old\", \"25-34 years old\", \"35-49 years old\", \"50-64 years old\", \"More than 64 years old\"]},\r\n        {id: \"ethnicity\", question: \"What is your ethnicity?\", answers: [\"Black (non-Hispanic)\", \"White (non-Hispanic)\", \"Asian\", \"Hispanic\", \"Other\"]},\r\n        {id: \"education\", question: \"What is your highest degree or level of school you have completed?\", answers: [\"Less than a high school diploma\", \"High school or equivalent\", \"Some college, no degree\", \"Associate degree\", \"Bachelor's degree\", \"Master's degree\", \"Professional degree\", \"Doctorate\"]},\r\n        {id: \"income\", question: \"What is your income level?\", answers: [\"Less than $20,000\", \"$20,000-$39,999\", \"$40,000-$59,999\", \"$60,000-$79,999\", \"$80,000-$99,999\", \"$100,000-$150,000\", \"More than $150,000\"]},\r\n        {id: \"usPolitics\", question: \"How would you declare yourself politically?\", answers: [\"Conservative\", \"Moderate\", \"Liberal\"]},\r\n        {id: \"socialPos\", question: \"How would you declare yourself socially?\", answers: [\"Conservative\", \"Moderate\", \"Liberal\"]},\r\n    ])},\r\n    {id: \"state\", questions: \"Which UK region do you currently reside in?\", answers: [\r\n        {'label': 'Scotland', 'value': 'Scotland'},\r\n        {'label': 'Northern Ireland', 'value': 'Northern Ireland'},\r\n        {'label': 'Wales', 'value': 'Wales'},\r\n        {'label': 'North East', 'value': 'North East'},\r\n        {'label': 'North West', 'value': 'North West'},\r\n        {'label': 'Yorkshire and the Humber', 'value': 'Yorkshire and the Humber'},\r\n        {'label': 'West Midlands', 'value': 'West Midlands'},\r\n        {'label': 'East Midlands', 'value': 'East Midlands'},\r\n        {'label': 'South East', 'value': 'South East'},\r\n        {'label': 'South West', 'value': 'South West'},\r\n        {'label': 'East of England', 'value': 'East of England'},\r\n        {'label': 'Greater London', 'value': 'Greater London'}\r\n\r\n    ]}\r\n]","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './App.css';\r\n\r\nclass Consent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Title\">Record of Consent</div>\r\n                    <div className=\"Text\">\r\n                        In this survey, we will present you with some situations involving COVID-19 and its vaccine that is currently under development and testing.\r\n                        <p style={{\"fontWeight\": \"bold\"}}>We are not looking for the correct answers, but your opinion on the matter.</p>\r\n                        <p className=\"Question Spotlight\">Please, read all the information provided in this survey carefully.</p>\r\n                        <div>\r\n                        <hr/>\r\n                        <div className=\"Subtitle\">\r\n                            Record of Consent\r\n                        </div>\r\n                        The purpose of this research is to understand public willingness to take a vaccine for COVID-19 under various circumstances. This experiment is composed of an online survey that takes less than 10 minutes to complete. Your responses will be used for research purposes only. Your responses may be shared with other researchers; all information, however, will be anonymized and allow no inference on any particular individual. \r\n                        Results will be published only as aggregate statistics, allowing no inference on any particular individual. Your participation is voluntary and you may withdraw from the study at any time without any penalty. To withdraw, simply close your browser.\r\n                        <div className=\"Spotlight RedSpotlight Subtitle\"> Participants who complete the survey will receive financial compensation as an incentive. <br/> \r\n                        <span style={(this.props.Preview)? {\"display\": \"none\"} : {}}>If you answer the questions in this survey too quickly (e.g., less than a second per question) without reading, \r\n                        your response will be discarded. Please read the survey carefully.</span></div>\r\n                        <br/>\r\n                        Please contact the research administrator (ibs.dscig@gmail.com) if you have any questions. Thank you!\r\n                        <br/>\r\n                        <span className=\"Question\">Clicking <span className=\"Spotlight\">next</span> below indicates that you have understood the information and consent to your participation.</span>\r\n                        </div>\r\n                        <hr/>\r\n                    </div>\r\n                    <div>\r\n                        <Button variant=\"secondary\" onClick={this.props.skipStage}>Next</Button>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Consent;","import React from 'react';\r\nimport './App.css';\r\nimport { introQuestions } from './Data.js';\r\nimport './Slider.css';\r\n\r\nclass ConcernContact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var shuffle = require('shuffle-array');\r\n        this.state = {\r\n            contactQuestions: shuffle(introQuestions.contact),\r\n            concernQuestions: shuffle(introQuestions.concern)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.contactQuestions.map((question, qIdx) => (\r\n                    <div key={qIdx} className=\"Question\">\r\n                        <span>{question.question}</span>\r\n                        <div key={qIdx}>\r\n                            {question.answers.map((answer, aIdx) => (\r\n                                <div className=\"Answer\" key={aIdx}>\r\n                                    <input key={aIdx} type=\"radio\" name={question.id} value={answer} onClick={() => this.props.saveResponses(question.id, answer)}/>\r\n                                    <label style={{\"display\": \"block\"}}>\r\n                                        {answer}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <hr/>\r\n                {this.state.concernQuestions.map((question, qIdx) => (\r\n                    <div key={qIdx} className=\"Question\">\r\n                        <span>{question.question}</span>\r\n                        <div key={qIdx}>\r\n                            <input type=\"range\" min=\"0\" max=\"100\" style={(!this.props.responsesIncludeKey(question.id))? {background: \"#000000\"}: {}}\r\n                            step=\"1\" onChange={(event) => {this.props.saveResponses(question.id, event.target.value)}}\r\n                            onClick={(event) => {this.props.saveResponses(question.id, event.target.value)}}/>\r\n                            <div className=\"SliderTicks\">\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"left\", width: \"50%\"}}>|</span>\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"right\", width: \"50%\"}}>|</span>\r\n                            </div>\r\n                            <div className=\"SliderMarker\">\r\n                                <span style={{float: \"left\"}}>{question.answers[0]}</span>\r\n                                {/* <span style={{float: \"center\", textAlign: \"center\"}}>{question.answers[1]}</span> */}\r\n                                <span style={{float: \"right\"}}>{question.answers[1]}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <hr/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConcernContact;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './App.css';\r\nimport ConcernContact from './ConcernContact.js';\r\n\r\nclass Intro extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initialInfo: true,\r\n            responses: {},\r\n            init: new Date()\r\n        };\r\n        this.changeInternalState = this.changeInternalState.bind(this);\r\n        this.saveResponses = this.saveResponses.bind(this);\r\n        this.checkTime = this.checkTime.bind(this);\r\n        this.responsesIncludeKey = this.responsesIncludeKey.bind(this);\r\n\r\n    }\r\n\r\n    checkTime() {\r\n        const delta_time = (new Date() - this.state.init) / 1000;\r\n        console.log(delta_time);\r\n        if (this.state.initialInfo) {\r\n            if (delta_time < 5) {\r\n                alert(\"Please take some time to carefully read the provided paragraph.\");\r\n            } else {\r\n                this.changeInternalState();\r\n                this.props.saveTime(\"introReadFinish\");\r\n            }\r\n        } else {\r\n            if (delta_time < 15) {\r\n                alert(\"Please take some time to carefully answer the questions.\");\r\n            } else {\r\n                if (Object.keys(this.state.responses).length < 7) {\r\n                    alert(\"You must answer all questions.\");\r\n                } else {\r\n                    this.props.saveDictToState(this.state.responses);\r\n                    this.props.skipStage();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    responsesIncludeKey(key) {\r\n        return (key in this.state.responses);\r\n    }\r\n\r\n    changeInternalState() {\r\n        this.setState({initialInfo: false, init: new Date()});\r\n    }\r\n\r\n    saveResponses(id, response) {\r\n        var tmpResponses = this.state.responses;\r\n        tmpResponses[id] = response;\r\n        this.setState({responses: tmpResponses});\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        let questions = (!this.state.initialInfo)? <ConcernContact saveResponses={this.saveResponses} responsesIncludeKey={this.responsesIncludeKey}/> : <div></div>;\r\n        content = <div>\r\n            <div className=\"Title\">Introduction</div>\r\n            <div className=\"BigText\">\r\n                COVID-19 is a respiratory illness caused by a novel coronavirus, first found in China in November 2019. \r\n                After spreading across Asia, the disease has reached Europe and America, leading the World Health Organization (WHO) to declare it a pandemic. \r\n                COVID-19 has so far infected over 3,400,000 people and has killed more than 240,000 patients around the world. \r\n            </div>\r\n            <hr/>\r\n        </div>;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {content}\r\n                </div>\r\n                <div>\r\n                    {questions}\r\n                </div>\r\n                <Button variant=\"secondary\" onClick={this.checkTime}>Next</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Intro;","import React from 'react';\r\nimport './App.css';\r\nimport './Slider.css';\r\nimport { willQuestions, beforeAfter } from './Data.js';\r\n\r\nclass WillQuestions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var shuffle = require('shuffle-array');\r\n        const tmpShuffle = shuffle(willQuestions);\r\n        this.state = {\r\n            questions: shuffle(tmpShuffle[0]).concat(tmpShuffle[1]),\r\n            questionCompletion: beforeAfter[[this.props.beforeAfter]],\r\n            postQuestionID: (this.props.beforeAfter === \"future\") ? \"Future\" : \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.questions.map((question, qIdx) => (\r\n                    <div key={qIdx} >\r\n                        <span className=\"Question\">{question.question + this.state.questionCompletion}</span>\r\n                        <div key={qIdx}>\r\n                            <input key={question.id + qIdx} \r\n                            style={(!this.props.responsesIncludeKey(question.id + this.state.postQuestionID))? {background: \"#000000\"}: {}} \r\n                            type=\"range\" min=\"0\" max=\"100\" step=\"1\" \r\n                            onChange={(event) => {this.props.saveResponses(question.id + this.state.postQuestionID, event.target.value)}}\r\n                            onClick={(event) => {this.props.saveResponses(question.id + this.state.postQuestionID, event.target.value)}}/>\r\n                            <div className=\"SliderTicks\">\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"left\", width: \"33.3%\"}}>|</span>\r\n                                    <span className=\"SliderLabel\" style={{width: \"33.3%\"}}>|</span>\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"right\", width: \"33.4%\"}}>|</span>\r\n                            </div>\r\n                            <div className=\"SliderMarker\">\r\n                                <span style={{float: \"left\"}}>{question.answers[0]}</span>\r\n                                <span style={{float: \"center\", textAlign: \"center\"}}>{question.answers[1]}</span>\r\n                                <span style={{float: \"right\"}}>{question.answers[2]}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WillQuestions;","import React from 'react';\r\nimport './App.css';\r\nimport WillQuestions from './WillQuestions';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AINews from './assets/AI.png';\r\nimport humanNews from \"./assets/human.png\";\r\nimport humanAINews from \"./assets/human-AI.png\";\r\n\r\nclass Present extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initialInfo: true,\r\n            responses: {},\r\n            init: new Date(),\r\n            showNews: false,\r\n            image: (this.props.agent === \"AI\")? AINews : (this.props.agent === \"human\")? humanNews : humanAINews\r\n        }\r\n        this.changeInternalState = this.changeInternalState.bind(this);\r\n        this.saveResponses = this.saveResponses.bind(this);\r\n        this.checkTime = this.checkTime.bind(this);\r\n        this.responsesIncludeKey = this.responsesIncludeKey.bind(this);\r\n    }\r\n\r\n    responsesIncludeKey(key) {\r\n        return (key in this.state.responses);\r\n    }\r\n\r\n    checkTime() {\r\n        const delta_time = (new Date() - this.state.init) / 1000;\r\n        console.log(delta_time);\r\n        if (this.state.initialInfo) {\r\n            if (delta_time < 20) {\r\n                alert(\"Please take some time to carefully read the provided excerpt.\");\r\n            } else {\r\n                this.props.saveTime(\"presentReadingFinish\");\r\n                this.changeInternalState();\r\n            }\r\n        } else {\r\n            if (delta_time < 15) {\r\n                alert(\"Please take some time to carefully answer the questions.\");\r\n            } else {\r\n                if (Object.keys(this.state.responses).length < 4) {\r\n                    alert(\"You must answer all questions.\");\r\n                } else {\r\n                    this.props.saveDictToState(this.state.responses);\r\n                    this.props.skipStage();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changeInternalState() {\r\n        this.setState({initialInfo: false, init: new Date()});\r\n    }\r\n\r\n    saveResponses(id, response) {\r\n        var tmpResponses = this.state.responses;\r\n        tmpResponses[id] = response;\r\n        this.setState({responses: tmpResponses});\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        if (this.state.initialInfo) {\r\n            content = <div>\r\n                <div className=\"Title\">Please read the following news excerpt.</div>\r\n                {/* <div className=\"SubTitle\">We have removed the real publisher as to not bias your judgement.</div> */}\r\n                <div>\r\n                    <img src={this.state.image} alt=\"News Excerpt\"/>\r\n                </div>\r\n                <hr/>\r\n            </div>;\r\n        } else {\r\n            content = <div>\r\n                <div>\r\n                    <div className=\"Subtitle\">\r\n                        Taking in consideration the news excerpt you have just read, please answer the following questions.\r\n                    </div>\r\n                    <div className=\"Text\" onMouseEnter={() => this.setState({showNews: true})} onMouseLeave={() => this.setState({showNews: false})}>\r\n                            If needed, please hover to see the news.\r\n                        <div>\r\n                            {(this.state.showNews)? <img src={this.state.image} alt=\"News Excerpt\"/>: null}\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <WillQuestions saveResponses={this.saveResponses} beforeAfter={this.props.beforeAfter} responsesIncludeKey={this.responsesIncludeKey}/>\r\n                </div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {content}\r\n                </div>\r\n                <Button variant=\"secondary\" onClick={this.checkTime}>Next</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Present;","import React from 'react';\r\nimport './App.css';\r\nimport { attentionCheck } from './Data.js';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass AttCheck extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var shuffle = require('shuffle-array');\r\n        this.state = {\r\n            answers: shuffle(attentionCheck.answers)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Title\">Please pick the best answer to the question below:</div>\r\n                <hr/>\r\n                <div className=\"Subtitle Question\">Who was able to find a compound for a COVID-19 vaccine according to the article you just read?</div>\r\n                <div style={{margin: \"15px\"}}>\r\n                    {this.state.answers.map((answer, aIdx) => (\r\n                        <div key={aIdx}>\r\n                            <input type=\"radio\" name=\"attCheck\" value={answer.Id} onClick={() => this.props.saveDictToState({\"attCheck\": answer.id})}/>\r\n                            <label style={{marginLeft: \"5px\"}}>\r\n                                {answer.text}\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <hr/>\r\n                <Button variant=\"secondary\" onClick={(this.props.responsesIncludeKey(\"attCheck\")? this.props.skipStage: (() => (alert(\"Please answer the question.\"))))}>Next</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AttCheck;","import React from 'react';\r\nimport './App.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {agentText, agentQuestions} from './Data.js';\r\nimport shuffle from 'shuffle-array';\r\n\r\nclass Responsibility extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            init: new Date(),\r\n            entities: agentText[this.props.agent],\r\n            currEntity: 0,\r\n            posNeg: this.props.consequences,\r\n            disease: this.props.disease,\r\n            responses: {},\r\n            entityQuestions: shuffle(agentQuestions)\r\n        }\r\n\r\n        this.checkTime = this.checkTime.bind(this);\r\n        this.saveResponses = this.saveResponses.bind(this);\r\n    }\r\n\r\n    saveResponses(id, response) {\r\n        var tmpResponses = this.state.responses;\r\n        tmpResponses[id] = response;\r\n        this.setState({responses: tmpResponses});\r\n    }\r\n\r\n    checkTime() {\r\n        const multiplier = (this.state.posNeg === \"neg\")? 3 : 2;\r\n        const time = (this.state.posNeg === \"neg\")? 10 : 7;\r\n        const delta_time = (new Date() - this.state.init) / 1000;\r\n        if (delta_time < (time * (this.state.currEntity + 1))) {\r\n            alert(\"Please take some time to carefully answer the questions.\");\r\n        } else {\r\n            if (Object.keys(this.state.responses).length < (multiplier * (this.state.currEntity + 1))) {\r\n                alert(\"You must answer all questions.\");\r\n            } else {\r\n                if ((this.state.currEntity + 1) === this.state.entities.length) {\r\n                    var responsesTmp = this.state.responses;\r\n                    for (var key in responsesTmp) {\r\n                        this.props.saveResponses(key, responsesTmp[key]);\r\n                    }\r\n                    this.props.checkTimeFuture();\r\n                } else {\r\n                    // need to reset inputs\r\n                    this.setState({currEntity: this.state.currEntity + 1});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const entity = this.state.entities[this.state.currEntity];\r\n        console.log(this.state.posNeg);\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {this.state.entityQuestions.map((question, qIdx) => (\r\n                        (question.id === \"Punish\" && (this.state.posNeg === \"pos\" || this.state.posNeg === \"con\"))?\r\n                        <div></div>\r\n                        :\r\n                        // !(question.id === \"Punish\" && this.state.posNeg === \"pos\")? \r\n                        //<div style={(question.id === \"Punish\" && (this.state.posNeg === \"pos\" || this.state.posNeg === \"con\"))? {display: \"none\"}: {}} key={qIdx} className=\"Question\">\r\n                        <div key={qIdx} className=\"Question\">\r\n                            <span className=\"Question\" style={{margin: \"0px\"}}>{question.initial[[this.state.posNeg]]} </span>\r\n                            <span className=\"Spotlight Question\" style={{margin: \"0px\"}}> {entity.text} </span> \r\n                            <span className=\"Question\" style={{margin: \"0px\"}}> {question.conclusion[[this.state.posNeg]]}</span>\r\n                            <div key={qIdx}>\r\n                                <input key={question.id + qIdx}\r\n                                value={((this.state.responses[entity.id + question.id] == null)? 50: this.state.responses[entity.id + question.id])} \r\n                                style={!((entity.id + question.id) in this.state.responses)? {background: \"#000000\"}: {}} type=\"range\" min=\"0\" max=\"100\" \r\n                                step=\"1\" \r\n                                onChange={(event) => {this.saveResponses(entity.id + question.id, event.target.value)}}\r\n                                onClick={(event) => {this.saveResponses(entity.id + question.id, event.target.value)}}/>\r\n                                <div className=\"SliderTicks\">\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"left\"}}>|</span>\r\n                                    <span className=\"SliderLabel\">|</span>\r\n                                    <span className=\"SliderLabel\">|</span>\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"right\"}}>|</span>\r\n                                </div>\r\n                                <div className=\"SliderMarker\">\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"left\"}}>{question.answers[0]}</span>\r\n                                    <span className=\"SliderLabel\">{question.answers[1]}</span>\r\n                                    <span className=\"SliderLabel\">{question.answers[2]}</span>\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"right\"}}>{question.answers[3]}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <Button variant=\"secondary\" onClick={this.checkTime}>Next</Button> <div/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Responsibility;","import React from 'react';\r\nimport './App.css';\r\nimport WillQuestions from './WillQuestions';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Responsibility from './Responsibility.js';\r\nimport { consequences, getRandomItem } from './Data.js';\r\nimport PosImg from './assets/pos_.png';\r\nimport NegImg from './assets/neg_.png';\r\nimport ConImg from './assets/con_.png';\r\n\r\nclass Future extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var consequence = getRandomItem(consequences);\r\n        this.state = {\r\n            init: new Date(),\r\n            stages: [\"intro\", \"resp\", \"will\"],\r\n            currStageId: 0, \r\n            responses: {},\r\n            hideButton: false, \r\n            consequences: consequence,\r\n            image: (consequence === \"pos\")? PosImg : (consequence === \"neg\")? NegImg : ConImg\r\n        }\r\n\r\n        this.responsesIncludeKey = this.responsesIncludeKey.bind(this);\r\n        this.checkTime = this.checkTime.bind(this);\r\n        this.saveResponses = this.saveResponses.bind(this);\r\n        this.showMainButton = this.showMainButton.bind(this);\r\n    }\r\n\r\n    showMainButton() {\r\n        this.setState({hideButton: false});\r\n    }\r\n\r\n    responsesIncludeKey(key) {\r\n        return (key in this.state.responses);\r\n    }\r\n\r\n    saveResponses(id, response) {\r\n        var tmpResponses = this.state.responses;\r\n        tmpResponses[id] = response;\r\n        this.setState({responses: tmpResponses});\r\n    }\r\n\r\n    checkTime() {\r\n        const delta_time = (new Date() - this.state.init) / 1000;\r\n        console.log(delta_time);\r\n        const currStage = this.state.stages[this.state.currStageId];\r\n        if (currStage === \"intro\") {\r\n            if (delta_time < 15) {\r\n                alert(\"Please take some time to carefully read the provided excerpt.\");\r\n            } else {\r\n                this.setState({hideButton: true});\r\n                this.props.saveTime(\"futureReadingFinish\");\r\n                this.setState({currStageId: this.state.currStageId + 1});\r\n            }\r\n        } else if (currStage === \"will\"){\r\n            if (delta_time < 15) {\r\n                alert(\"Please take some time to carefully answer the questions.\");\r\n            } else {\r\n                var condition = (\"personalWillFuture\" in this.state.responses) && (\"childWillFuture\" in this.state.responses) && (\"elderWillFuture\" in this.state.responses);\r\n                condition = condition && (\"worrinessFuture\" in this.state.responses);\r\n                if (!condition) { // change this\r\n                    alert(\"You must answer all questions.\");\r\n                } else {\r\n                    // this.setState({hideButton: true});\r\n                    // this.setState({currStageId: this.state.currStageId + 1});\r\n                    this.props.saveDictToState(this.state.responses);\r\n                    this.props.skipAppStage();\r\n                }\r\n            }\r\n        } else if (currStage === \"resp\") {\r\n            this.saveResponses(\"consequence\", this.state.consequences);\r\n            this.setState({currStageId: this.state.currStageId + 1});\r\n            // this.props.saveDictToState(this.state.responses);\r\n            // this.props.skipAppStage();\r\n            this.props.saveTime(\"respQFinish\");\r\n            this.setState({hideButton: false});\r\n        } else {\r\n            alert(\"Not to be implemented\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        const currStage = this.state.stages[this.state.currStageId];\r\n        if (currStage === \"intro\") {\r\n            content = <div>\r\n                <div className=\"Title\">A vaccine for COVID-19 is expected to be widely available to the public in 12 to 18 months from now.</div>\r\n                <div className=\"Subtitle\">\r\n                    The following news excerpt is a future scenario where a vaccine has been finally approved by the U.S. Food and Drug Administration (FDA).\r\n                </div>\r\n                <div>\r\n                    <img src={this.state.image} alt=\"News Excerpt\"/>\r\n                </div>\r\n                <hr/>\r\n            </div>;\r\n\r\n        } else if (currStage === \"will\") {\r\n            content = <div>\r\n                <div>\r\n                    <div className=\"Subtitle\">\r\n                        Taking in consideration the future news excerpt you have read, please answer the following questions.\r\n                    </div>\r\n                    <div className=\"Text\" onMouseEnter={() => this.setState({showNews: true})} onMouseLeave={() => this.setState({showNews: false})}>\r\n                            If needed, please hover to see the news.\r\n                        <div>\r\n                            {(this.state.showNews)? <img src={this.state.image} alt=\"News Excerpt\"/>: null}\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <WillQuestions saveResponses={this.saveResponses} beforeAfter={\"future\"} responsesIncludeKey={this.responsesIncludeKey}/>\r\n                </div>\r\n            </div>;\r\n        } else if (currStage === \"resp\") {\r\n            content = <div>\r\n                <div>\r\n                    <div className=\"Subtitle\">\r\n                        {(this.state.consequences !== \"neg\")? \r\n                        <span>We are interested in how you would assign credit and awareness to the entities involved in the development of the COVID-19 vaccine.</span>:\r\n                        <span>We are interested in how you would assign blame, awareness, and punishment to the entities involved in the development of the COVID-19 vaccine.</span>}\r\n                    </div>\r\n                    <div className=\"Text\" onMouseEnter={() => this.setState({showNews: true})} onMouseLeave={() => this.setState({showNews: false})}>\r\n                            If needed, please hover to see the news.\r\n                        <div>\r\n                            {(this.state.showNews)? <img src={this.state.image} alt=\"News Excerpt\"/>: null}\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <Responsibility saveResponses={this.saveResponses}\r\n                    responsesIncludeKey={this.responsesIncludeKey} \r\n                    checkTimeFuture={this.checkTime}\r\n                    agent={this.props.agent}\r\n                    disease={this.props.disease} \r\n                    consequences={this.state.consequences}/>\r\n                </div>\r\n            </div>;\r\n        } else {\r\n            content = \"Not implemented\";\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {content}\r\n                </div>\r\n                {(!this.state.hideButton)? <Button variant=\"secondary\" onClick={this.checkTime}>Next</Button>: <div/>}\r\n            </div>\r\n\r\n        );\r\n    }\r\n \r\n}\r\nexport default Future;","import React from 'react';\r\nimport './App.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { MMMS } from './Data.js';\r\nimport shuffle from 'shuffle-array';\r\n\r\nclass Medical extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            init: new Date(),\r\n            questions: shuffle(MMMS.questions),\r\n            responses: {},\r\n        };\r\n\r\n        this.saveResponses = this.saveResponses.bind(this);\r\n        this.checkTime = this.checkTime.bind(this);\r\n    }\r\n\r\n    saveResponses(id, response) {\r\n        var tmpResponses = this.state.responses;\r\n        tmpResponses[id] = response;\r\n        this.setState({responses: tmpResponses});\r\n    }\r\n\r\n    checkTime() {\r\n        const delta_time = (new Date() - this.state.init) / 1000;\r\n        console.log(delta_time);\r\n        if (delta_time < 20){\r\n            alert(\"Please take some time to answer the questions.\");\r\n        } else {\r\n            if (Object.keys(this.state.responses).length < 10) {\r\n                alert(\"You must answer all questions.\");\r\n            } else {\r\n                this.props.saveDictToState(this.state.responses);\r\n                this.props.skipStage();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Title\">\r\n                        Please let us know a little bit about your utilization of the health care system.\r\n                </div>\r\n                <div className=\"Subtitle\">\r\n                    To what extent to you agree with the following statements?\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    {this.state.questions.map((question, qIdx) => (\r\n                    <div key={qIdx}>\r\n                        <span className=\"Question\">{question.text}</span>\r\n                        <div key={qIdx}>\r\n                            <input key={question.id + qIdx} \r\n                            style={!(question.id in this.state.responses)? {background: \"#000000\"}: {}} \r\n                            type=\"range\" min=\"0\" max=\"100\" step=\"1\" \r\n                            onChange={(event) => {this.saveResponses(question.id, event.target.value)}}\r\n                            onClick={(event) => {this.saveResponses(question.id, event.target.value)}}/>\r\n                            <div className=\"SliderTicks\">\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"left\", width: \"33.3%\"}}>|</span>\r\n                                    <span className=\"SliderLabel\" style={{width: \"33.3%\"}}>|</span>\r\n                                    <span className=\"SliderLabel\" style={{textAlign: \"right\", width: \"33.4%\"}}>|</span>\r\n                                </div>\r\n                            <div className=\"SliderMarker\">\r\n                                <span style={{float: \"left\"}}>{MMMS.answers[0]}</span>\r\n                                <span style={{float: \"center\", textAlign: \"center\"}}>{MMMS.answers[1]}</span>\r\n                                <span style={{float: \"right\"}}>{MMMS.answers[2]}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n                <hr/>\r\n                <Button variant=\"secondary\" onClick={this.checkTime}>Next</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Medical;","import React from 'react';\r\nimport './App.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport shuffle from 'shuffle-array';\r\nimport { demographics } from './Data.js';\r\nimport Select from 'react-select';\r\n\r\nclass Demographics extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            init: new Date(),\r\n            responses: {},\r\n            demographicQuestions: shuffle(demographics),\r\n        }\r\n\r\n        this.saveResponses = this.saveResponses.bind(this);\r\n        this.checkTime = this.checkTime.bind(this);\r\n    }\r\n\r\n    saveResponses(id, response) {\r\n        var tmpResponses = this.state.responses;\r\n        tmpResponses[id] = response;\r\n        this.setState({responses: tmpResponses});\r\n    }\r\n\r\n    checkTime() {\r\n        const delta_time = (new Date() - this.state.init) / 1000;\r\n        console.log(delta_time);\r\n        if (delta_time < 30){\r\n            alert(\"Please take some time to answer the questions.\");\r\n        } else {\r\n            if (Object.keys(this.state.responses).length < 25) {\r\n                alert(\"You must answer all questions.\");\r\n            } else {\r\n                this.props.saveDictToState(this.state.responses);\r\n                this.props.skipStage();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let content, setQuestions;\r\n        content = [<div key=\"div0\">\r\n            <div className=\"Title\">Please let us know a little bit more about yourself.</div>\r\n            <div className=\"Subtitle\">All the information obtained below will be used solely for research purposes.</div>\r\n        </div>];\r\n        for (let i=0; i < this.state.demographicQuestions.length; i++) {\r\n            setQuestions = this.state.demographicQuestions[i];\r\n            if (setQuestions.id === \"govt\") {\r\n                content = [...content, <hr key={\"hr\" + i}/>, \r\n                <div key={\"key\" + i}>\r\n                    {setQuestions.questions.map((question, qIdx) => (\r\n                        <div key={qIdx}>\r\n                            <span className=\"Question\">{question.question}</span>\r\n                            <div key={qIdx}>\r\n                                <input key={question.id + qIdx} \r\n                                style={!(question.id in this.state.responses)? {background: \"#000000\"}: {}} \r\n                                type=\"range\" min=\"0\" max=\"100\" step=\"1\" \r\n                                onChange={(event) => {this.saveResponses(question.id, event.target.value)}}\r\n                                onClick={(event) => {this.saveResponses(question.id, event.target.value)}}/>\r\n                                <div className=\"SliderTicks\">\r\n                                        <span className=\"SliderLabel\" style={{textAlign: \"left\", width: \"33.3%\"}}>|</span>\r\n                                        <span className=\"SliderLabel\" style={{width: \"33.3%\"}}>|</span>\r\n                                        <span className=\"SliderLabel\" style={{textAlign: \"right\", width: \"33.4%\"}}>|</span>\r\n                                    </div>\r\n                                <div className=\"SliderMarker\">\r\n                                    <span style={{float: \"left\"}}>{question.answers[0]}</span>\r\n                                    <span style={{float: \"center\", textAlign: \"center\"}}>{question.answers[1]}</span>\r\n                                    <span style={{float: \"right\"}}>{question.answers[2]}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>];\r\n            } else if (setQuestions.id === \"newsSNS\" || setQuestions.id === \"personalCovid\" || setQuestions.id === \"personal\") {\r\n                content = [...content, <hr key={\"hr\" + i}/>, \r\n                <div key={\"key\" + i}>\r\n                    {setQuestions.questions.map((question, qIdx) => (\r\n                        <div key={qIdx}>\r\n                            <span className=\"Question\">{question.question}</span>\r\n                            <div key={qIdx}>\r\n                                {question.answers.map((answer, aIdx) => (\r\n                                    <div className=\"Answer\" key={aIdx}>\r\n                                        <input key={aIdx} type=\"radio\" name={question.id} value={answer} onClick={() => this.saveResponses(question.id, answer)}/>\r\n                                        <label style={{\"display\": \"block\"}}>\r\n                                            {answer}\r\n                                        </label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>];\r\n            } else if (setQuestions.id === \"state\") {\r\n                content = [...content, <hr key={\"hr\" + i}/>,\r\n                <div key={\"key\" + i}>\r\n                    <div className=\"Question\">{setQuestions.questions}</div>\r\n                    <Select options={setQuestions.answers} onChange={(value) => this.saveResponses(\"state\", value[\"value\"])}/>\r\n                </div>\r\n                ]\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {content}\r\n                </div>\r\n                <hr/>\r\n                <Button variant=\"secondary\" onClick={this.checkTime}>Next</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Demographics;","const config = {\r\n    apiKey: \"AIzaSyAiKXZv9QrpCsUzWDcUGE8normuwZ02FyQ\",\r\n    authDomain: \"ai-vaccine.firebaseapp.com\",\r\n    databaseURL: \"https://ai-vaccine.firebaseio.com\",\r\n    projectId: \"ai-vaccine\",\r\n    storageBucket: \"ai-vaccine.appspot.com\",\r\n    messagingSenderId: \"124019639283\",\r\n    appId: \"1:124019639283:web:e8a53663a178dd9cffc886\"\r\n  };\r\n\r\nexport default config;","import React from 'react';\nimport { getRandomItem, treatDiseases, treatAgents, treatTimes } from './Data.js';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Consent from './Consent.js';\nimport Intro from './Intro.js';\nimport Present from './Present.js';\nimport AttCheck from './AttCheck.js';\nimport Future from './Future.js';\nimport Medical from './Medical.js';\nimport Demographics from './Demographics.js';\nimport firebase from 'firebase';\nimport config from './config.js';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    const queryString = require('query-string');\n    const params = queryString.parse(this.props.location.search);\n    this.state = {\n      time: {\"init\": new Date()},\n      prolificId: params.RESPONDENT_ID,\n      // studyId: params.STUDY_ID,\n      // sessionId: params.SESSION_ID,\n      disease: getRandomItem(treatDiseases),\n      agent: getRandomItem(treatAgents),\n      beforeAfter: getRandomItem(treatTimes),\n      stages: [\"consent\", \"intro\", \"present\", \"att\", \"future\", \"mmms\", \"demographics\", \"end\"],\n      currStageId: 0,\n      responses: {}\n    }\n\n    this.saveDictToState = this.saveDictToState.bind(this);\n    this.saveTime = this.saveTime.bind(this);\n    this.skipStage = this.skipStage.bind(this);\n    this.redirectToSurveyCompletion = this.redirectToSurveyCompletion.bind(this);\n    this.saveToFirebase = this.saveToFirebase.bind(this);\n    this.responsesIncludeKey = this.responsesIncludeKey.bind(this);\n\n    firebase.initializeApp(config);\n  }\n\n  responsesIncludeKey(key) {\n    return (key in this.state.responses);\n  }\n\n  saveDictToState(dict) {\n    var responsesTmp = this.state.responses;\n    for (var key in dict) {\n        responsesTmp[key] = dict[key];\n    }\n    this.setState({responses: responsesTmp});\n  }\n\n  saveTime(nameTime) {\n    const delta_time = new Date() - this.state.time[\"init\"];\n    this.setState({time: {...this.state.time, [nameTime]: delta_time}});\n  }\n\n\n  skipStage() {\n    this.saveTime(this.state.stages[this.state.currStageId] + \"End\");\n    this.setState({currStageId: this.state.currStageId + 1});\n  }\n\n  saveToFirebase() {\n    var allResponses = this.state.responses;\n    allResponses.disease = this.state.disease;\n    allResponses.agent = this.state.agent;\n    allResponses.beforeAfter = this.state.beforeAfter;\n    allResponses.prolificId = this.state.prolificId;\n    // allResponses.studyId = this.state.studyId;\n    // allResponses.sessionId = this.state.sessionId;\n    const times = this.state.time;\n    for (var keyTime in times) {\n        allResponses[keyTime] = times[keyTime];\n    }\n    firebase.database().ref(\"/pollfish/\" + this.state.prolificId).set(allResponses).catch(error => console.log(error)).then(() => this.redirectToSurveyCompletion());\n    //this.redirectToSurveyCompletion();\n}\n\n  redirectToSurveyCompletion() {\n    let path = 'https://wss.pollfish.com/api/thirdparty/v1/complete';\n    window.open(path, \"_self\");\n}\n  render() {\n    const stage = this.state.stages[this.state.currStageId];\n    let content;\n    if (stage === \"consent\") {\n      content = <Consent skipStage={this.skipStage}/>;\n    } else if (stage === \"intro\") {\n      content = <Intro skipStage={this.skipStage} saveDictToState={this.saveDictToState} saveTime={this.saveTime}/>\n    } else if (stage === \"present\") {\n      content = <Present skipStage={this.skipStage} \n      saveDictToState={this.saveDictToState} beforeAfter={this.state.beforeAfter} \n      agent={this.state.agent} disease={this.state.disease} saveTime={this.saveTime}/>\n    } else if (stage === \"att\") {\n      content = <AttCheck skipStage={this.skipStage} saveDictToState={this.saveDictToState} responsesIncludeKey={this.responsesIncludeKey}/>\n    } else if (stage === \"future\") {\n      content = <Future skipAppStage={this.skipStage} \n      saveDictToState={this.saveDictToState} agent={this.state.agent} \n      disease={this.state.disease} saveTime={this.saveTime}/>\n    } else if (stage === \"mmms\") {\n      content = <Medical skipStage={this.skipStage} saveDictToState={this.saveDictToState}/>\n    } else if (stage === \"demographics\") {\n      content = <Demographics skipStage={this.skipStage} saveDictToState={this.saveDictToState}/>\n    } else if (stage === \"end\") {\n      content = <div>\n                  <div className=\"Title\">Thank you for participating in our survey!</div>\n                  <div className=\"Subtitle\">\n                      If you have any questions, feel free to contact us at ibs.dscig@gmail.com.\n                      <hr/>\n                  </div>\n                  <div className=\"QuestionMargin\">\n                      <span className=\"Title Spotlight RedSpotlight\">Click on the button below to complete the survey.</span>\n                      <div className=\"QuestionMargin\">\n                          <Button variant=\"secondary\" onClick={this.saveToFirebase}>Complete Survey</Button>\n                      </div>\n                  </div>\n                </div>; \n    } else {\n      content = <div className=\"Title\">Please contact the research administrator (ibs.dscig@gmail.com)</div>\n    }\n  return (\n    <div className=\"App\">\n      {content}\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nconst routing = (\n  <Router>\n    <div>\n      <Route path=\"/\" component={App}/>\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}